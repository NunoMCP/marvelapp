{"version":3,"sources":["Content.js","api/marvel.js","Loader.js","ErrorPage.js","EntryPage.js","App.js","reportWebVitals.js","index.js"],"names":["Content","props","className","onClick","handlerClick","title","description","series","price","alt","src","imagePath","publicKey","timeStamp","Date","now","md5hash","cryptoJS","MD5","toString","axios","create","method","headers","Accept","baseURL","params","Loader","ui","ErrorPage","EntryPage","App","apiCall","term","a","setState","spinner","marvel","get","response","data","results","images","comicTitle","path","imageFile","extension","imageType","noImage","comicDescription","comicSeries","name","comicPrice","prices","firstLoad","state","this","Math","floor","random","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f2fe8548.chunk.js","sourcesContent":["import React from \"react\"\r\n\r\nfunction Content(props) {\r\n    return(\r\n  <div>\r\n    <div className=\"ui inverted menu fixed\">\r\n      <div className=\"ui container\">\r\n        <p className=\"header item\">Marvel API</p>\r\n      </div>\r\n      <div className=\"right menu\">\r\n        <div className=\"item\">\r\n          <button className=\"ui button right inverted\" onClick={props.handlerClick}>Randomize</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div className=\"ui hidden divider custommargins\"/>\r\n    <div className=\"ui two column centered grid mt-5\">\r\n      <div className=\"eight wide column\">\r\n        <div className=\"ui main text container\">\r\n          <h1 className=\"ui header\">{props.title}</h1>\r\n          <p>{props.description}</p>\r\n          <h2>Comic series:<br/>{props.series}</h2>\r\n          <h3>Comic price: <br/>{props.price}</h3>\r\n        </div>\r\n      </div>\r\n      <div className=\"four wide column centered\">\r\n        <img className=\"ui image huge\" alt=\"No available cover\" src={props.imagePath}/>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  )\r\n}\r\n\r\nexport default Content\r\n","import axios from \"axios\"\r\nimport cryptoJS from \"crypto-js\"\r\n\r\nconst privateKey = \"666771d4344d36e88416549dc01cc89e77aef44f\"\r\n\r\nconst publicKey = \"2077f290d4af055dd6b9c195f7b77f82\"\r\n\r\nconst timeStamp = Date.now()\r\n\r\nconst md5hash = cryptoJS.MD5(timeStamp+privateKey+publicKey).toString()\r\n\r\nexport default axios.create({\r\n    method: \"GET\",\r\n    headers: {\r\n        Accept: \"*/*\"\r\n    },\r\n    baseURL: \"https://gateway.marvel.com/v1/\",\r\n    params: {\r\n        \"apikey\": publicKey,\r\n        \"ts\": timeStamp,\r\n        \"hash\": md5hash\r\n    }\r\n})","import React from \"react\"\r\n\r\nfunction Loader(){\r\n    return(\r\n        <div ui className=\"ui container\">\r\n            <div className=\"ui active dimmer\">\r\n                <div className=\"ui text loader huge\">\r\n                    Loading\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loader","import React from \"react\"\r\n\r\nfunction ErrorPage(props){\r\n    return(\r\n        <div>\r\n            <div className=\"ui inverted menu fixed\">\r\n                <div className=\"ui container\">\r\n                    <p className=\"header item\">Marvel API</p>\r\n                </div>\r\n                <div className=\"right menu\">\r\n                    <div className=\"item\">\r\n                        <button className=\"ui button right inverted\" onClick={props.handlerClick}>Randomize</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"ui hidden divider custommargins\"/>\r\n            <div className=\"ui main text container\">\r\n                <div className=\"ui column\">\r\n                    <div className=\"ui segment\">\r\n                        <h3>There has been an error fetching the comic's data, this is usually an issue with Marvel's API not having an associated image with the comic.</h3>\r\n                        <h3>Using the randomize button will make another call to the server and fix the issue.</h3>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ErrorPage","import React from \"react\"\r\n\r\nfunction EntryPage(props){\r\n    return(\r\n        <div>\r\n            <div className=\"ui inverted menu fixed\">\r\n                <div className=\"ui container\">\r\n                    <p className=\"header item\">Marvel API</p>\r\n                </div>\r\n                <div className=\"right menu\">\r\n                    <div className=\"item\">\r\n                        <button className=\"ui button right inverted\" onClick={props.handlerClick}>Randomize</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"ui hidden divider custommargins\"/>\r\n            <div className=\"ui main text container\">\r\n                <div className=\"ui column\">\r\n                    <div className=\"ui segment\">\r\n                        <h3>Please click the randomize button to get a random Marvel comic.</h3>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EntryPage","import React from \"react\"\nimport './App.css';\nimport Content from \"./Content\"\nimport marvel from \"./api/marvel\"\nimport Loader from \"./Loader\"\nimport ErrorPage from \"./ErrorPage\"\nimport EntryPage from \"./EntryPage\"\n\nclass App extends React.Component{\nconstructor(props){\n  super(props)\n\n  this.state = {\n    imagePath: null,\n    imageType: null,\n    imageFile: null,\n    comicTitle: null,\n    comicDescription: null,\n    comicSeries: null,\n    comicPrice: null,\n    spinner: false,\n    noImage: false,\n    firstLoad: true,\n  }\n}\n\n\n  apiCall = async term => {\n    this.setState({spinner: true})\n    const response = await marvel.get(\"public/comics?orderBy=issueNumber&limit=1&offset=\"+term)\n    if(!response.data.data.results[0].images[0]){\n      this.setState({noImage: true})\n    } else {\n    this.setState({\n      comicTitle: response.data.data.results[0].title,\n      imagePath: response.data.data.results[0].images[0].path,\n      imageFile: \".\" + response.data.data.results[0].images[0].extension,\n      imageType: \"/detail\",\n      noImage: false,\n      comicDescription: response.data.data.results[0].description,\n      comicSeries: response.data.data.results[0].series.name,\n      comicPrice: response.data.data.results[0].prices[0].price,\n      firstLoad: false\n\n    })\n  }\n    if(this.state.comicDescription === null){\n        this.setState({comicDescription: \"No available comic description.\"})\n      }\n    this.setState({spinner: false})\n  }\n\n  render(){\n    if(this.state.spinner === true){\n      return(\n        <div>\n          <Loader handlerClick={() => this.apiCall(Math.floor(Math.random()*25720))}/>\n        </div>\n      )\n    }else if(this.state.firstLoad === true){\n      return(\n        <div>\n          <EntryPage handlerClick={() => this.apiCall(Math.floor(Math.random()*25720))}/>\n        </div>\n      )\n    }\n    else if(this.state.noImage === true){\n      return(\n        <div>\n          <ErrorPage/>\n        </div>\n      )\n    }else{\n      return(\n        <div>\n          <Content\n          title={this.state.comicTitle}\n          imagePath={this.state.imagePath+this.state.imageType+this.state.imageFile}\n          description={this.state.comicDescription}\n          series={this.state.comicSeries}\n          price={this.state.comicPrice + \"$\"}\n          handlerClick={() => this.apiCall(Math.floor(Math.random()*25720))}\n          />\n        </div>\n      )\n    }\n  }\n}\n\n\n//marvel comics api tem 25721\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}